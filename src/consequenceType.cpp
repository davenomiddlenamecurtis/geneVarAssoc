#include "consequenceType.hpp"

#ifdef USEOLDWEIGHTS
consequenceReport consequence[]={
	{ NULL_CONSEQUENCE,"NULL_CONSEQUENCE",1.0 },
	{ INTERGENIC,"INTERGENIC",1.0 },
	{ DOWNSTREAM,"DOWNSTREAM",1.0 },
	{ INTRONIC,"INTRONIC",3.0 },
	{ THREEPRIME_UTR,"3PRIME_UTR",3.0 },
	{ SYNONYMOUS_CODING,"SYNONYMOUS_CODING",5.0 },
	{ UPSTREAM,"UPSTREAM",5.0 },
	{ FIVEPRIME_UTR,"5PRIME_UTR",5.0 },
	{ SPLICE_SITE,"SPLICE_SITE",5.0 },
	{ STOP_LOST,"STOP_LOST",5.0 },
	{ NON_SYNONYMOUS_CODING,"NON_SYNONYMOUS_CODING",10.0 },
	{ CODINGINDEL,"CODINGINDEL",15.0 },
	{ FRAMESHIFT_CODING,"FRAMESHIFT_CODING",20.0 },
	{ STOP_GAINED,"STOP_GAINED",20.0 },
	{ KOZAK,"KOZAK",10.0 }
};
#else
consequenceReport consequence[]={
	{ NULL_CONSEQUENCE,"NULL_CONSEQUENCE",1.0 },
	{ INTERGENIC,"INTERGENIC",1.0 },
	{ DOWNSTREAM,"DOWNSTREAM",1.0 },
	{ INTRONIC,"INTRONIC",3.0 },
	{ THREEPRIME_UTR,"3PRIME_UTR",5.0 },
	{ SYNONYMOUS_CODING,"SYNONYMOUS_CODING",3.0 },
	{ UPSTREAM,"UPSTREAM",5.0 },
	{ FIVEPRIME_UTR,"5PRIME_UTR",5.0 },
	{ SPLICE_SITE,"SPLICE_SITE",5.0 },
	{ STOP_LOST,"STOP_LOST",5.0 },
	{ NON_SYNONYMOUS_CODING,"NON_SYNONYMOUS_CODING",10.0 },
	{ CODINGINDEL,"CODINGINDEL",15.0 },
	{ FRAMESHIFT_CODING,"FRAMESHIFT_CODING",20.0 },
	{ ESSENTIAL_SPLICE_SITE,"ESSENTIAL_SPLICE_SITE",10.0 },
	{ STOP_GAINED,"STOP_GAINED",20.0 },
	{ KOZAK,"KOZAK",10.0 }
};

#endif

const char* consequenceString(consequenceType t)
{
	for (int i=0;i<NCONSEQUENCETYPES;++i)
		if (t==consequence[i].t)
			return consequence[i].str;
}
